{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "sml",
  "rules": {
    "source_file": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_atomic_expression"
        }
      ]
    },
    "_alphanum_identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[A-Za-z][A-Za-z'_0-9]*"
      }
    },
    "_symbolic_identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[!%&$#+\\-/:<=>?@\\\\~'^|*]+"
      }
    },
    "real_constant": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "~"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "[0-9]+"
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "PATTERN",
                        "value": "\\.[0-9]+"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  },
                  {
                    "type": "PATTERN",
                    "value": "[eE]~?[0-9]+"
                  }
                ]
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "[0-9]+"
                  },
                  {
                    "type": "PATTERN",
                    "value": "\\.[0-9]+"
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "PATTERN",
                        "value": "[eE]~?[0-9]+"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "integer_constant": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "[0-9]+"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "~"
              },
              {
                "type": "PATTERN",
                "value": "[0-9]+"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "0x"
              },
              {
                "type": "PATTERN",
                "value": "[0-9a-fA-F]+"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "~0x"
              },
              {
                "type": "PATTERN",
                "value": "[0-9a-fA-F]+"
              }
            ]
          }
        ]
      }
    },
    "word_constant": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "0w"
              },
              {
                "type": "PATTERN",
                "value": "[0-9]+"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "0wx"
              },
              {
                "type": "PATTERN",
                "value": "[0-9a-fA-F]+"
              }
            ]
          }
        ]
      }
    },
    "string_constant": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\""
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "\\\\[ \\t\\n\\r\\f]+\\\\"
                },
                {
                  "type": "PATTERN",
                  "value": "\\\\(a|b|t|n|v|f|r|\"|\\\\|\\^[\\x40-\\x5F]|[0-9]{3}|u[0-9A-Fa-f]{4})"
                },
                {
                  "type": "PATTERN",
                  "value": "[^\"\\\\\\n\\r]+"
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": "\""
          }
        ]
      }
    },
    "char_constant": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "STRING",
            "value": "\""
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "PATTERN",
              "value": "\\\\[ \\t\\n\\r\\f]+\\\\"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "\\\\(a|b|t|n|v|f|r|\"|\\\\|\\^[\\x40-\\x5F]|[0-9]{3}|u[0-9A-Fa-f]{4})"
              },
              {
                "type": "PATTERN",
                "value": "[^\"\\\\\\n\\r]+"
              }
            ]
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "PATTERN",
              "value": "\\\\[ \\t\\n\\r\\f]+\\\\"
            }
          },
          {
            "type": "STRING",
            "value": "\""
          }
        ]
      }
    },
    "_atomic_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "integer_constant"
        },
        {
          "type": "SYMBOL",
          "name": "real_constant"
        },
        {
          "type": "SYMBOL",
          "name": "word_constant"
        },
        {
          "type": "SYMBOL",
          "name": "string_constant"
        },
        {
          "type": "SYMBOL",
          "name": "char_constant"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "inline": [],
  "supertypes": [
    "_atomic_expression"
  ]
}
