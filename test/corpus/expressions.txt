=================
Application 0
=================

val _ = a b c d

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (atomic_application_expression
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier))))))))

=================
Application 1
=================

val _ = (a, b) c d

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (atomic_application_expression
          (tuple_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier)))))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier))))))))

=================
Application 2
=================

val _ = a (b, c) d

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (atomic_application_expression
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (tuple_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier)))))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier))))))))

=================
Application 3
=================

val _ = a b (c, d)

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (atomic_application_expression
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (tuple_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))))))))

=================
Application 3
=================

val _ = a b (c, d)

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (atomic_application_expression
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier)))
          (tuple_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))))))))

=================
Precedence: application vs type
=================

val _ = a b : int

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (typed_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (qualified_type_identifier
            (type_identifier
              (alphanum_identifier))))))))

=================
Precedence: application vs andalso
=================

val _ = a b andalso c

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (conjunction_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Precedence: application vs orelse
=================

val _ = a b orelse c

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (disjunction_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Precedence: application vs handle
=================

val _ = a b handle e => f

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (handle_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (match
            (rule
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (atomic_application_expression
                (identifier_expression
                  (qualified_identifier
                    (alphanum_identifier)))))))))))

=================
Precedence: application vs raise
=================

val _ = raise a b

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (raise_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Precedence: application vs if
=================

val _ = if a b then c d else e f

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (conditional_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Precedence: application vs while
=================

val _ = while a b do c d

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (iteration_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Precedence: type vs conjunction
=================

val _ = x andalso y : int

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (conjunction_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (typed_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (qualified_type_identifier
              (type_identifier
                (alphanum_identifier)))))))))

=================
Precedence: conjunction vs disjunction
=================

val _ = x orelse y andalso z

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (disjunction_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (conjunction_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))))))))

=================
Precedence: conjunction vs disjunction 2
=================

val _ = x andalso y orelse z

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (disjunction_expression
          (conjunction_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier)))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Associativity: andalso
=================

val _ = x andalso y andalso z

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (conjunction_expression
          (conjunction_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier)))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Associativity: orelse
=================

val _ = x orelse y orelse z

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (disjunction_expression
          (disjunction_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier)))))
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier)))))))))

=================
Precedence: orelse vs handle
=================

val _ = x orelse y handle e => f

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (handle_expression
          (disjunction_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier)))))
          (match
            (rule
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (atomic_application_expression
                (identifier_expression
                  (qualified_identifier
                    (alphanum_identifier)))))))))))

=================
Precedence: orelse vs raise
=================

val _ = raise x orelse y

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (raise_expression
          (disjunction_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))))))))

=================
Precedence: handle vs raise
=================

val _ = raise x handle e => f

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (raise_expression
          (handle_expression
            (atomic_application_expression
              (identifier_expression
                (qualified_identifier
                  (alphanum_identifier))))
            (match
              (rule
                (identifier_pattern
                  (qualified_identifier
                    (alphanum_identifier)))
                (atomic_application_expression
                  (identifier_expression
                    (qualified_identifier
                      (alphanum_identifier))))))))))))

=================
Case 1
=================

val _ = case a of b => c

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (case_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (match
            (rule
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (atomic_application_expression
                (identifier_expression
                  (qualified_identifier
                    (alphanum_identifier)))))))))))

=================
Case 2
=================

val _ = case a of b => c | d => e

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (case_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (match
            (rule
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (atomic_application_expression
                (identifier_expression
                  (qualified_identifier
                    (alphanum_identifier)))))
            (rule
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (atomic_application_expression
                (identifier_expression
                  (qualified_identifier
                    (alphanum_identifier)))))))))))

=================
Case associativity
=================

val _ = case a of b => case c of d => e | x => y

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (case_expression
          (atomic_application_expression
            (identifier_expression
              (qualified_identifier
                (alphanum_identifier))))
          (match
            (rule
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (case_expression
                (atomic_application_expression
                  (identifier_expression
                    (qualified_identifier
                      (alphanum_identifier))))
                (match
                  (rule
                    (identifier_pattern
                      (qualified_identifier
                        (alphanum_identifier)))
                    (atomic_application_expression
                      (identifier_expression
                        (qualified_identifier
                          (alphanum_identifier)))))
                  (rule
                    (identifier_pattern
                      (qualified_identifier
                        (alphanum_identifier)))
                    (atomic_application_expression
                      (identifier_expression
                        (qualified_identifier
                          (alphanum_identifier))))))))))))))

=================
Fn associativity
=================

val _ = fn a => fn b => c | x => y

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (function_expression
          (match
            (rule
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (function_expression
                (match
                  (rule
                    (identifier_pattern
                      (qualified_identifier
                        (alphanum_identifier)))
                    (atomic_application_expression
                      (identifier_expression
                        (qualified_identifier
                          (alphanum_identifier)))))
                  (rule
                    (identifier_pattern
                      (qualified_identifier
                        (alphanum_identifier)))
                    (atomic_application_expression
                      (identifier_expression
                        (qualified_identifier
                          (alphanum_identifier))))))))))))))
