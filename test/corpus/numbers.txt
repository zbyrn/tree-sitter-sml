================
Int simple
================
val _ = 42
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int zero
================
val _ = 0
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int negative
================
val _ = ~123
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int hex
================
val _ = 0x42aaFFAAff
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int negative hex
================
val _ = ~0x42aaFFAAff
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int leading zero
================
val _ = 0123
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int leading zero hex
================
val _ = 0x0123
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int large
================
val _ = 9999999999999999999
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (integer_literal)))))

================
Int invalid alpha
================
val _ = 4a2

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (application_expression
          (integer_literal)
          (identifier_expression
            (qualified_identifier
              (identifier))))))))

================
Word simple
================
val _ = 0w10
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (word_literal)))))

================
Word hex
================
val _ = 0wx01AF
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (word_literal)))))

================
Word zero
================
val _ = 0w0
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (word_literal)))))

================
Word invalid
================
val _ = 0w

------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (application_expression
          (integer_literal)
          (identifier_expression
            (qualified_identifier
              (identifier))))))))

================
real_simple
================
val _ = 3.14
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (real_literal)))))

================
Real exponent
================
val _ = 2.5e3
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (real_literal)))))

================
Real negative exponent
================
val _ = 2.5e~3
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (real_literal)))))

================
Real negative
================
val _ = ~6.022e23
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (real_literal)))))

================
Real decimal only
================
val _ = 123.0
----------------

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (real_literal)))))

================
Real invalid double dot
:error
================
val _ = 3.0.0

-----



================
Real invalid exp
================
val _ = 4.2e

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (application_expression
          (real_literal)
          (identifier_expression
            (qualified_identifier
              (identifier))))))))
