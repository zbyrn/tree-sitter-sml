===================
Wildcard
===================

val _ = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (wildcard))
      (rhs (integer_literal)))))

===================
Unit
===================

val () = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (parenthesized_pattern))
      (rhs (integer_literal)))))

===================
Literal pattern (int)
===================

val 3 = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (literal_pattern (integer_literal)))
      (rhs (integer_literal)))))

===================
Literal pattern (string)
===================

val "string" = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (literal_pattern (string_literal)))
      (rhs (integer_literal)))))

===================
Literal pattern (char)
===================

val #"s" = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (literal_pattern (char_literal)))
      (rhs (integer_literal)))))


===================
Literal pattern (char)
===================

val #"s" = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (literal_pattern (char_literal)))
      (rhs (integer_literal)))))

===================
Identifier pattern 1
===================

val x = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (identifier_pattern))
      (rhs (integer_literal)))))

===================
Identifier pattern 2
===================

val op x = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (identifier_pattern))
      (rhs (integer_literal)))))

===================
Identifier pattern 3
===================

val A.B.C.x = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (identifier_pattern))
      (rhs (integer_literal)))))

===================
Identifier pattern 4
===================

val A.B.C.>> = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (identifier_pattern))
      (rhs (integer_literal)))))


===================
List pattern nil
===================

val [] = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (list_pattern))
      (rhs (integer_literal)))))

===================
List pattern one
===================

val [x] = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (list_pattern (identifier_pattern)))
      (rhs (integer_literal)))))

===================
List pattern two
===================

val [x, y] = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (list_pattern (identifier_pattern) (identifier_pattern)))
      (rhs (integer_literal)))))

===================
Record pattern empty
===================

val {} = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (record_pattern))
      (rhs (integer_literal)))))

===================
Record pattern ident
===================

val {x, y} = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (record_pattern
             (pattern_row (identifier_label))
             (pattern_row (identifier_label))))
      (rhs (integer_literal)))))

===================
Record pattern ident bind
===================

val {x=z, y=x} = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (record_pattern
             (pattern_row (identifier_label) (identifier_pattern))
             (pattern_row (identifier_label) (identifier_pattern))))
      (rhs (integer_literal)))))

===================
Vector pattern ident bind
===================

val #[x, A.x, 6] = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (vector_pattern
             (identifier_pattern)
             (identifier_pattern)
             (literal_pattern (integer_literal))))
      (rhs (integer_literal)))))

===================
Compound pattern 1
===================

val SOME x = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (identifier_pattern) (identifier_pattern))
      (rhs (integer_literal)))))

===================
Compound pattern 2
===================

val x as y : int = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (layered_pattern
        (identifier_pattern)
        (constraint_pattern
          (identifier_pattern)
          (tycon))))
      (rhs (integer_literal)))))

===================
Compound pattern 3
===================

val x : int as y : int = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (layered_pattern
        (constraint_pattern (identifier_pattern) (tycon))
        (constraint_pattern (identifier_pattern) (tycon))))
      (rhs (integer_literal)))))

===================
Tuple pattern 1
===================

val (x) = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (parenthesized_pattern (identifier_pattern)))
      (rhs (integer_literal)))))

===================
Tuple pattern 2
===================

val (x, x as y) = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (parenthesized_pattern
             (identifier_pattern)
             (layered_pattern
               (identifier_pattern)
               (identifier_pattern))))
      (rhs (integer_literal)))))

===================
Or pattern 1
===================

val (x | y) = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs (parenthesized_pattern
             (identifier_pattern)
             (identifier_pattern)))
      (rhs (integer_literal)))))

