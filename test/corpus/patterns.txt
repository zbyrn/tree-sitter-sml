===================
Wildcard
===================

val _ = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (wildcard))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Unit
===================

val () = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (unit_pattern))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Literal pattern (int)
===================

val 3 = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (literal_pattern
          (integer_literal)))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Literal pattern (string)
===================

val "string" = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (literal_pattern
          (string_literal)))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Literal pattern (char)
===================

val #"s" = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (literal_pattern
          (char_literal)))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Literal pattern (char)
===================

val #"s" = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (literal_pattern
          (char_literal)))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 1
===================

val x = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (alphanum_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 2
===================

val op x = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (alphanum_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 3
===================

val A.B.C.x = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (structure_identifier)
            (structure_identifier)
            (structure_identifier)
            (alphanum_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 4
===================

val A.B.C.>> = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (structure_identifier)
            (structure_identifier)
            (structure_identifier)
            (symbolic_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 5
===================

val op = = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (symbolic_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 6
===================

val * = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (symbolic_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 7
===================

val A.= = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (structure_identifier)
            (symbolic_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Identifier pattern 8
===================

val op A.= = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (identifier_pattern
          (qualified_identifier
            (structure_identifier)
            (symbolic_identifier))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
List pattern nil
===================

val [] = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (list_pattern))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
List pattern one
===================

val [x] = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (list_pattern
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
List pattern two
===================

val [x, y] = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (list_pattern
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Record pattern empty
===================

val {} = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (record_pattern))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Record pattern ident
===================

val {x, y} = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (record_pattern
          (pattern_row
            (identifier_label
              (alphanum_identifier)))
          (pattern_row
            (identifier_label
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Record pattern ident bind
===================

val {x=z, y=x} = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (record_pattern
          (pattern_row
            (identifier_label
              (alphanum_identifier))
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier))))
          (pattern_row
            (identifier_label
              (alphanum_identifier))
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier))))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Vector pattern ident bind
===================

val #[x, A.x, 6] = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (vector_pattern
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_pattern
            (qualified_identifier
              (structure_identifier)
              (alphanum_identifier)))
          (literal_pattern
            (integer_literal))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Compound pattern 1
===================

val SOME x = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (application_pattern
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Compound pattern 1.5 (infix)
===================

val (x, y) + z = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (application_pattern
          (tuple_pattern
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier))))
          (identifier_pattern
            (qualified_identifier
              (symbolic_identifier)))
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Compound pattern 2
===================

val x as y : int = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (constraint_pattern
          (layered_pattern
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier))))
          (qualified_type_identifier
            (type_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Compound pattern 3
===================

val x : int as y : int = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (constraint_pattern
          (layered_pattern
            (constraint_pattern
              (identifier_pattern
                (qualified_identifier
                  (alphanum_identifier)))
              (qualified_type_identifier
                (type_identifier
                  (alphanum_identifier))))
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier))))
          (qualified_type_identifier
            (type_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Tuple pattern 1
===================

val (x) = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (parenthesized_pattern
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Tuple pattern 2
===================

val (x, x as y) = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (tuple_pattern
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))
          (layered_pattern
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier)))
            (identifier_pattern
              (qualified_identifier
                (alphanum_identifier))))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Or pattern 1
===================

val (x | y) = 3

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (or_pattern
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))
          (identifier_pattern
            (qualified_identifier
              (alphanum_identifier)))))
      (rhs
        (atomic_application_expression
          (integer_literal))))))

===================
Record dot dot dot
===================

val {sourceStream, errConsumer, interactive, sourceMap, anyErrors, ...} = source

-----

(source_file
  (value_declaration
    (valbind
      (lhs
        (record_pattern
          (pattern_row
            (identifier_label
              (alphanum_identifier)))
          (pattern_row
            (identifier_label
              (alphanum_identifier)))
          (pattern_row
            (identifier_label
              (alphanum_identifier)))
          (pattern_row
            (identifier_label
              (alphanum_identifier)))
          (pattern_row
            (identifier_label
              (alphanum_identifier)))
          (pattern_row
            (wildcard_row))))
      (rhs
        (atomic_application_expression
          (identifier_expression
            (qualified_identifier
              (alphanum_identifier))))))))
