===================
Type Con
===================

val x : int = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (qualified_tycon
            (tycon))))
      (rhs
        (integer_literal)))))

===================
Type Var
===================

val x : 'a = 3

-----

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (tyvar)))
      (rhs
        (integer_literal)))))

===================
Type Var 2
===================

val x : 'abc = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (tyvar)))
      (rhs
        (integer_literal)))))

===================
Type app
===================

val x : (a, 'b) t = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (tyapp
            (qualified_tycon
              (tycon))
            (tyvar)
            (qualified_tycon
              (tycon)))))
      (rhs
        (integer_literal)))))

===================
Type app 2
===================

val x : ('a t2) t = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (tyapp
            (tyapp
              (tyvar)
              (qualified_tycon
                (tycon)))
            (qualified_tycon
              (tycon)))))
      (rhs
        (integer_literal)))))

===================
Type app 3
===================

val x : 'a t = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (tyapp
            (tyvar)
            (qualified_tycon
              (tycon)))))
      (rhs
        (integer_literal)))))

===================
Type arrow
===================

val x : a -> b = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (arrow_type
            (qualified_tycon
              (tycon))
            (qualified_tycon
              (tycon)))))
      (rhs
        (integer_literal)))))

===================
Type arrow 2
===================

val x : a -> b -> c = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (arrow_type
            (qualified_tycon
              (tycon))
            (arrow_type
              (qualified_tycon
                (tycon))
              (qualified_tycon
                (tycon))))))
      (rhs
        (integer_literal)))))

===================
Type arrow 3
===================

val x : (a -> b) -> c = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (arrow_type
            (arrow_type
              (qualified_tycon
                (tycon))
              (qualified_tycon
                (tycon)))
            (qualified_tycon
              (tycon)))))
      (rhs
        (integer_literal)))))

===================
Tuple type
===================

val x : (a * b) = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (tuple_type
            (qualified_tycon
              (tycon))
            (qualified_tycon
              (tycon)))))
      (rhs
        (integer_literal)))))

===================
Tuple type 2
===================

val x : a * b = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (tuple_type
            (qualified_tycon
              (tycon))
            (qualified_tycon
              (tycon)))))
      (rhs
        (integer_literal)))))

===================
Record type
===================

val x : {x: int} = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (record_type
            (type_row
              (identifier_label
                (identifier))
              (qualified_tycon
                (tycon))))))
      (rhs
        (integer_literal)))))

===================
Record type num
===================

val x : {1: int} = 3

------

(source_file
  (structure_level_declaration
    (value_declaration
      (lhs
        (constraint_pattern
          (identifier_pattern
            (qualified_identifier
              (identifier)))
          (record_type
            (type_row
              (int_label
                (index))
              (qualified_tycon
                (tycon))))))
      (rhs
        (integer_literal)))))
